@model PlantNests.Models.CustomerViewModel
@{
    ViewData["Title"] = "OrderPlace";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}

<style>

    .form-group small {
        color: var(--error-color);
        position: absolute;
        bottom: 0;
        left: 0;
        visibility: hidden;
    }

    .form-group.success input {
        border-color: var(--succes-color);
    }

    .form-group.error input {
        border-color: var(--error-color);
    }

    .form-group.error small {
        visibility: visible;
    }

    .borderform {
        border-radius: 50px;
        padding: 30px;
    }

    .btn btn-primary {
        border-radius: 20px;
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
    }

    .custom-control-input payment-radio {
        background-color: #90EE90;
    }
</style>


<div class="breadcrumb-area">
    <!-- Top Breadcrumb Area -->
    <div class="top-breadcrumb-area bg-img bg-overlay d-flex align-items-center justify-content-center" style="background-image: url('/Clientsite/img/bg-img/24.jpg');">
        <h2>Register</h2>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-12">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#"><i class="fa fa-home"></i> Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Checkout</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>
<!-- ##### Breadcrumb Area End ##### -->
<!-- ##### Checkout Area Start ##### -->
<div class="checkout_area mb-100">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-12 col-lg-7">
                <div class="checkout_details_area clearfix">
                    <br />
                    <h5>Billing Details</h5>
                    <form method="post" asp-action="OrderPlace" id="form">
                        <div class="row">
                            <div class="col-md-6 mb-4 form-group">
                                <label for="first_name">First Name *</label>
                                <input asp-for="Name" class="form-control" id="first_name" name="name" value="@Model.Name"><br />
                                <small style="color:red;">Error Message</small>
                            </div>
                            <div class="col-12 mb-4 form-group">
                                <label for="email_address">Email Address *</label>
                                <input asp-for="Email" class="form-control" id="email" name="email" value="@Model.Email"><br />
                                <small style="color:red;">Error Message</small>
                            </div>
                            <div class="col-12 mb-4 form-group">
                                <label for="password">Password *</label>
                                <input asp-for="Password" class="form-control" id="password" name="password" value="@Model.Password"><br />
                                <small style="color:red;">Error Message</small>
                            </div>
                            <div class="col-12 mb-4 form-group">
                                <label for="address">Address *</label>
                                <input asp-for="address" class="form-control" id="add" name="address" value="@Model.address">
                                <small style="color:red;">Error Message</small>
                            </div>
                            <div class="col-12 mb-4 form-group">
                                <label for="phone_number">Phone Number *</label>
                                <input asp-for="Number" class="form-control" id="number" name="phone" value="@Model.Number"><br />
                                <small style="color:red;">Error Message</small>
                            </div>


                        </div>
                    </form>
                </div>
            </div>


            <div class="col-12 col-lg-4">
                <div class="checkout-content">
                    <h5 class="title--">Your Order</h5>
                    <div class="products">
                        <div class="products-data">
                            <h5>Products:</h5>

                        </div>
                    </div>
                    <div class="subtotal d-flex justify-content-between align-items-center">
                        <h5>SubTotall</h5>
                        <h5>$@ViewBag.bill </h5>
                    </div>
                    <div class="shipping d-flex justify-content-between align-items-center">
                        <h5>Shipping Free</h5>
                    </div>
                    <div class="order-total d-flex justify-content-between align-items-center">
                        <h5>Order Total</h5>
                        <h5>$@ViewBag.bill </h5>
                    </div><br />

                    <form method="post" asp-action="OrderPlace" id="form">
                        <h5 class="section-title position-relative text-uppercase mb-3"><span class="mt-5 pr-3">Payment</span></h5>
                        @foreach (var item in ViewBag.payment)
                        {
                            <div class="col-md-6 form-group">
                                <div class="custom-control custom-radio">
                                    <input type="radio" class="custom-control-input payment-radio" name="PaymentTypeId" id="paypal-@item.paymenttypeId" value="@item.paymenttypeId" />
                                    <label class="custom-control-label" for="paypal-@item.paymenttypeId">@item.PaymentType</label>
                                    <small style="color:red;">Error Message</small>
                                </div>
                            </div>
                        }
                        <div class="checkout-btn mt-30">
                            <input type="submit" class="btn alazea-btn w-100" value="Place Order">
                        </div>
                    </form>
                      
                </div>
            </div>

        </div>
    </div>
</div>



<script>
    function submitForm() {
        const form = document.getElementById('form');
        const CustName = document.getElementById('first_name');
        const email = document.getElementById('email');
        const password = document.getElementById('password');
        const number = document.getElementById('number');
        const address = document.getElementById('add');
        const payment = document.getElementById('paypal');

        // Show input error messages
        function showError(input, message) {
            const formControl = input.parentElement;
            formControl.className = 'col-md-6 form-group error';
            const small = formControl.querySelector('small');
            small.innerText = message;
        }
        // Show success color
        function showSuccess(input) {
            const formControl = input.parentElement;
            formControl.className = 'col-md-6 form-group success';
        }

        // Check email is valid
        function checkEmail(input) {
            const re = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
            if (input.value.trim() === '') {
                showError(input, 'Email is required');
            } else if (re.test(input.value.trim())) {
                showSuccess(input);
            } else {
                showError(input, 'Email is not valid');
            }
        }

        function checkPassword(input) {
            const password = input.value.trim();
            if (password === '') {
                showError(input, 'Password is required');
            } else if (password.length < 10) {
                showError(input, 'Password must be at least 10 characters');
            } else {
                showSuccess(input);
            }
        }

        // Check required fields
        function checkRequired(inputArr) {
            inputArr.forEach(function (input) {
                if (input.value.trim() === '') {
                    showError(input, `${getFieldName(input)} is required`);
                } else {
                    showSuccess(input);
                }
            });
        }

        // Check input Length
        function checkLength(input, min, max) {
            if (input.value.length < min) {
                showError(input, `${getFieldName(input)} must be at least ${min} characters`);
            } else if (input.value.length > max) {
                showError(input, `${getFieldName(input)} must be less than ${max} characters`);
            } else {
                showSuccess(input);
            }
        }

        // Get FieldName
        function getFieldName(input) {
            return input.id.charAt(0).toUpperCase() + input.id.slice(1);
        }

        // Validate form fields
        checkRequired([CustName, email, password, number, address, payment]);
        checkLength(CustName, 3, 15);
        checkPassword(password);
        checkEmail(email);

        // Check if there are any errors
        if (document.querySelectorAll('.form-group.error').length === 0) {
            // If no errors, submit the form
            form.submit();
        }
    }
</script>

